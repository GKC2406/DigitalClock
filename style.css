
*
{
    margin: 0;
    padding: 0;
}

.digi_Clk
{
    background: hsl(224, 32%, 12%);
    background-image: conic-gradient(
        from 0deg at 50% 50%,
        blue,
        purple,
        purple,
        blue
    );
    background-blend-mode: multiply;
    min-block-size: 100dvh;
    /* display: grid;
    place-items: center; */
    padding-top: 30px;
    text-align: center;
    font-size: larger;
    font-weight: bold;
    font-family:'Poppins', sans-serif;
    box-sizing: border-box;
    color: #fff;
}


/* Compared to display: inline, the major difference is that display: 
inline-block allows to set a width and height on the element. Also, with display: inline-block, 
the top and bottom margins/paddings are respected, but with display: inline they are not. 
Compared to display: block, the major difference is that display: inline-block 
does not add a line-break after the element, so the element can sit next to other elements. */
.block
{
    display: inline-block;
    border: solid thin white;
    border-radius: .6em;
    width: 270px;
    height: 50px;
    padding: 10px;
    position: relative;
    top: 15px;
    background-color: #050529;
    box-shadow: 0px 20px 35px rgba(0, 0, 0, 0.1);
    overflow: hidden;
}
.block::before
{
    content: "";
    position: absolute;
    top:-25% ;
    left: -25%;
    width: 150%;
    height: 150%;
    background: conic-gradient(from 90deg, rgb(0 0 0 / 0%) 70%, rgb(11 78 230 /9%) 80%, rgb(0 220 225) 100%);
    animation: rotate 4s linear;
}
.block:hover::before
{
    animation: rotate 4s linear infinite;
}
@keyframes rotate
{
    100%
    {
        transform: rotate(2turn);
    }    
}
.block::after
{
    content:"";
    position: absolute;
    top: 7%;
    left: 3%;
    width: 95%;
    height: 85%;
    background: #020223;
    z-index: 1;
}
h1
{
    position: relative;
    top:6% ;
    left: 1%;
    line-height: 2ch;
    font-size: 180%;
    font-weight: bold;
    font-family:'Poppins', sans-serif;
    z-index: 2;
    color: #fff;
    text-shadow: 0 0 5px #250909, 0 0 10px #700ade;
    transition: 2s;
}
h1:hover
{
    animation: animate 2s linear infinite alternate;

}
@keyframes animate
{
    0% { text-shadow: 0 0 5px #3d1873, 0 0 10px #0e3742;}
    50% { text-shadow: 0 0 20px #4d95d9, 0 0 30px #3680c5; }
    100% { text-shadow: 0 0 10px #03bcf4, 0 0 20px #03bcf4, 0 0 40px #03bcf4, 0 0 100px #03bcf4; }
}

.container
{
    background-color: hsl(222, 45%, 7%);
    padding: 2rem;
    width: 500px;
    height: 150px;
    border-radius: 1rem;
    position: sticky;
    top: 37%;
    left: 25%;
    transform-style: preserve-3d;
    transform: perspective(5000px) translate(-25% -37%);
}
.container:hover
{
    position: absolute;
    transform: rotateX(var(--rotateY)) rotateY(var(--rotateX));
    transition: transform ease-in-out;
}
.container > *
{
    text-shadow: 0 0 0 0.3em currentColor;
}

.container::before, .container::after
{
    content: "";
    position: absolute;
    border-radius: inherit;
}

/* shadow */
.container::before
{
    inset: 0.75rem;    
    background: black;
    border-radius: inherit;
    z-index: -1;
    transform: translateZ(-30px);
    filter: blur(15px);
    opacity: 0.5;
}
/* gradient */
.container::after
{
    z-index: -2;
    inset: -1rem;
    background: linear-gradient(-45deg, red, blue);
    transform: translateZ(-50px);
    animation: glowing 2s ease-in-out infinite alternate;
}
.clock
{
    width: 100%;
    height: 100%;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
}
.clock div, span
{
    font-size: 50px;
    width: 50px;
    position: relative;
}
.clock #session
{
    margin: 15px;
}
.clock div::after
{
    content: '';
    font-size: 16px;
    position: absolute;
    left: 50%;
    transform: translate(-50%);
    bottom: -15px;
}
#hours::after
{
    content: 'HRS';
}
#minutes::after
{
    content: 'MIN';
}
#seconds::after
{
    content: 'SEC';
}

@keyframes glowing {
    0% { box-shadow: 0 0 .3em rgba(255, 255, 255, .6), inset 0 0 .8em rgba(255, 255, 255,  .6) }
    50% { box-shadow: 0 0 .8em rgba(255, 255, 255, .6), inset 0  0 1em rgba(255, 255, 255, .6)}
    100% {box-shadow: 0 0 .3em rgba(255, 255, 255, .6), inset 0 0 .8em rgba(255, 255, 255, .6)}
}